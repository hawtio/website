{"componentChunkName":"component---src-templates-docs-template-js","path":"/docs/online/create-user/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"creating-a-hawtio-user-for-form-authentication\" style=\"position:relative;\"><a href=\"#creating-a-hawtio-user-for-form-authentication\" aria-label=\"creating a hawtio user for form authentication permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a Hawtio user for Form authentication</h1>\n<p>If you install Hawtio on Kubernetes or choose to use Form authentication, you need a user with a bearer token to log in to the console. There are <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/\">different ways</a> to create or provide users with bearer tokens.</p>\n<p>This doc illustrates how to create a <code>ServiceAccount</code> as a user to log in to the Hawtio console.</p>\n<h2 id=\"creating-a-serviceaccount\" style=\"position:relative;\"><a href=\"#creating-a-serviceaccount\" aria-label=\"creating a serviceaccount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a ServiceAccount</h2>\n<p>First, create a <code>ServiceAccount</code> named <code>hawtio-user</code> in the namespace you installed Hawtio.</p>\n<pre><code class=\"language-sh\">$ cat &#x3C;&#x3C;EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: hawtio-user\n  namespace: hawtio\nEOF\n</code></pre>\n<h2 id=\"creating-a-rolebindingclusterrolebinding\" style=\"position:relative;\"><a href=\"#creating-a-rolebindingclusterrolebinding\" aria-label=\"creating a rolebindingclusterrolebinding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a RoleBinding/ClusterRoleBinding</h2>\n<p>Next, assign the user with an appropriate role by creating a <code>RoleBinding</code> or <code>ClusterRoleBinding</code> respectively depending on the <a href=\"../README.md#deployment\">deployment mode</a> you chose. For more information on RBAC, see <a href=\"./rbac.md\">RBAC</a>.</p>\n<p>Here we use <code>cluster-admin</code> cluster role for demonstrative purposes. Note that this role gives a user maximum permissions and should be used in development only. In general it is recommended to use a more restrictive role in practice.</p>\n<pre><code class=\"language-sh\">$ cat &#x3C;&#x3C;EOF | kubectl apply -f -\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: hawtio-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: hawtio-user\n  namespace: hawtio\nEOF\n</code></pre>\n<h2 id=\"getting-a-bearer-token\" style=\"position:relative;\"><a href=\"#getting-a-bearer-token\" aria-label=\"getting a bearer token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting a bearer token</h2>\n<p>Finally, get the bearer token for the user with the following command:</p>\n<pre><code class=\"language-sh\">$ kubectl -n hawtio get secrets $(kubectl -n hawtio get sa hawtio-user -o jsonpath=\"{.secrets[0].name}\") \\\n        -o go-template=\"{{.data.token | base64decode}}\"\n</code></pre>\n<p>Now you can copy the token and paste it to the Token form to log in to Hawtio console.</p>","frontmatter":{"title":""}}},"pageContext":{"slug":"/docs/online/create-user/"}}}